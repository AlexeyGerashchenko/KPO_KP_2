// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/files": {
            "get": {
                "description": "Возвращает ID и имена всех загруженных файлов.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Список всех файлов",
                "responses": {
                    "200": {
                        "description": "Список файлов",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.File"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/files/upload": {
            "post": {
                "description": "Загружает текстовый файл, сохраняет его и возвращает ID.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Загрузка файла",
                "parameters": [
                    {
                        "type": "file",
                        "description": "Файл для загрузки (только .txt)",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ID загруженного файла",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Ошибка валидации или обработки файла",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/files/{id}": {
            "get": {
                "description": "Возвращает содержимое файла по его ID.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Получение файла по ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID файла",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Содержимое файла",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Файл не найден",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/internal/file-content": {
            "get": {
                "description": "Возвращает содержимое файла по его location.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Получение содержимого файла по location (внутренний)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Location файла",
                        "name": "location",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Содержимое файла",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Файл не найден по указанному location",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/internal/files/{id}/location": {
            "get": {
                "description": "Возвращает location файла по его ID для использования другими сервисами.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "files"
                ],
                "summary": "Получение location файла по ID (внутренний)",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ID файла",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location файла",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Файл не найден",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Внутренняя ошибка сервера",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.File": {
            "description": "Метаданные файла, хранящиеся в базе данных.",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "description": "Время удаления (если удален)",
                    "type": "string",
                    "example": "2023-01-01T14:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "unique-file-id"
                },
                "location": {
                    "type": "string",
                    "example": "/app/file_storage_1/unique-file-id.txt"
                },
                "name": {
                    "type": "string",
                    "example": "example.txt"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8081",
	BasePath:         "/api/v1",
	Schemes:          []string{"http"},
	Title:            "File Storing Service API",
	Description:      "Этот сервис отвечает за хранение и выдачу файлов.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
